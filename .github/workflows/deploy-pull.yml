name: Deploy (pull) Laravel + React/Vite
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy por SSH (pull en servidor)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -e  # Detener si hay errores
            
            # Cargar variables de entorno (para npm/node)
            source ~/.bashrc || true
            source ~/.nvm/nvm.sh || true
            
            # Ir al directorio del proyecto
            cd /var/www/ViajesRoxanaWeb
            
            echo "🚀 Iniciando deploy..."
            echo "📍 Directorio actual: $(pwd)"
            
            # Verificar versiones
            echo "🔍 Verificando herramientas..."
            node --version || echo "❌ Node.js no encontrado"
            npm --version || echo "❌ npm no encontrado"
            php --version | head -1 || echo "❌ PHP no encontrado"
            composer --version | head -1 || echo "❌ Composer no encontrado"
            
            # Verificar que estamos en una rama limpia
            if [ -n "$(git status --porcelain)" ]; then
              echo "⚠️ Hay cambios sin commitear, haciendo stash..."
              git stash push --include-untracked
              STASHED=1
            else
              STASHED=0
            fi
            
            # Hacer git pull
            echo "🔄 Haciendo git pull..."
            git fetch origin main
            git checkout main
            git pull origin main
            
            # Restaurar stash si es necesario
            if [ "$STASHED" = "1" ]; then
              echo "↩️ Restaurando cambios del stash..."
              git stash pop || echo "⚠️ No se pudo restaurar stash"
            fi
            
            # Verificar si composer.json cambió
            if git diff --name-only HEAD~1 HEAD 2>/dev/null | grep -q "composer.json\|composer.lock" || [ ! -d "vendor" ]; then
              echo "📦 Instalando dependencias de Composer..."
              export COMPOSER_ALLOW_SUPERUSER=1
              composer install --no-dev --optimize-autoloader --no-interaction
            else
              echo "✅ Composer sin cambios"
            fi
            
            # Verificar si package.json cambió
            if git diff --name-only HEAD~1 HEAD 2>/dev/null | grep -q "package.json\|package-lock.json" || [ ! -d "node_modules" ]; then
              echo "📦 Instalando dependencias de npm..."
              if [ -f package-lock.json ]; then 
                npm ci
              else 
                npm install
              fi
            else
              echo "✅ npm sin cambios"
            fi
            
            # Ejecutar migraciones (solo si hay migraciones pendientes)
            echo "🗄️ Verificando migraciones..."
            if php artisan migrate:status --no-interaction 2>/dev/null | grep -q "Ran?.*No"; then
              echo "🗄️ Ejecutando migraciones..."
              php artisan migrate --force --no-interaction
            else
              echo "✅ No hay migraciones pendientes"
            fi
            
            # Construir assets con Vite
            echo "🏗️ Construyendo assets con Vite..."
            npm run build
            
            # Limpiar y optimizar cache
            echo "🧹 Limpiando cache..."
            php artisan config:clear || true
            php artisan route:clear || true
            php artisan view:clear || true
            
            echo "⚡ Optimizando para producción..."
            php artisan config:cache || true
            php artisan route:cache || true
            php artisan view:cache || true
            php artisan storage:link || true
            
            # Establecer permisos correctos
            echo "🔐 Estableciendo permisos..."
            mkdir -p storage/framework/{cache,sessions,views} bootstrap/cache || true
            chmod -R 775 storage bootstrap/cache || true
            chown -R www-data:www-data storage bootstrap/cache || echo "⚠️ chown falló (normal si no eres root)"
            
            # Recargar PHP-FPM
            echo "🔁 Recargando PHP-FPM..."
            systemctl reload php8.3-fpm || systemctl reload php8.2-fpm || systemctl reload php-fpm || echo "⚠️ No se pudo recargar PHP-FPM"
            
            echo "✅ Deploy completado exitosamente!"
