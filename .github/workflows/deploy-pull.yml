name: Deploy Laravel + React/Vite
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy por SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -e  # Detener si hay errores
            
            # Cargar variables de entorno
            source ~/.bashrc 2>/dev/null || true
            source ~/.nvm/nvm.sh 2>/dev/null || true
            
            # Ruta del proyecto (hardcoded porque PROJECT_PATH est√° vac√≠o)
            cd /var/www/ViajesRoxanaWeb
            
            echo "üöÄ Iniciando deploy..."
            echo "üìç Directorio actual: $(pwd)"
            
            # Verificar herramientas
            echo "üîç Verificando herramientas..."
            node --version || echo "‚ùå Node.js no encontrado"
            npm --version || echo "‚ùå npm no encontrado"
            composer --version || echo "‚ùå Composer no encontrado"
            
            # Git pull
            echo "üîÑ Actualizando c√≥digo..."
            git pull origin main
            
            # Verificar archivos cambiados para optimizar instalaciones
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || echo "")
            echo "üìù Archivos cambiados: ${CHANGED_FILES:-"(no se pudieron detectar)"}"
            
            # Composer - solo si cambi√≥ o no existe vendor/
            if echo "$CHANGED_FILES" | grep -q "composer\.\(json\|lock\)" || [ ! -d vendor ]; then
              echo "üì¶ Instalando dependencias de Composer..."
              export COMPOSER_ALLOW_SUPERUSER=1
              composer install --no-dev --optimize-autoloader --no-interaction
            else
              echo "‚úÖ Sin cambios en composer.json/lock"
            fi
            
            # NPM - solo si cambi√≥ o no existe node_modules/
            if echo "$CHANGED_FILES" | grep -q "package\(-lock\)\?\.json" || [ ! -d node_modules ]; then
              echo "üì¶ Instalando dependencias de npm..."
              if [ -f package-lock.json ]; then
                npm ci
              else
                npm install
              fi
            else
              echo "‚úÖ Sin cambios en package.json/lock"
            fi
            
            # Migraciones - solo si hay pendientes
            echo "üóÑÔ∏è Verificando migraciones..."
            if php artisan migrate:status --no-interaction 2>/dev/null | grep -q "No"; then
              echo "üóÑÔ∏è Ejecutando migraciones pendientes..."
              php artisan migrate --force --no-interaction
            else
              echo "‚úÖ No hay migraciones pendientes"
            fi
            
            # Build assets
            echo "üèóÔ∏è Construyendo assets..."
            npm run build
            
            # Limpieza y optimizaci√≥n Laravel
            echo "üßπ Limpiando cache..."
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            
            echo "‚ö° Optimizando para producci√≥n..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # Storage link
            php artisan storage:link 2>/dev/null || echo "‚úÖ storage:link ya existe"
            
            # Permisos
            echo "üîê Estableciendo permisos..."
            mkdir -p storage/framework/{cache,sessions,views} bootstrap/cache
            chmod -R 775 storage bootstrap/cache
            
            # Recargar PHP-FPM
            echo "üîÅ Recargando PHP-FPM..."
            systemctl reload php8.3-fpm 2>/dev/null || \
            systemctl reload php8.2-fpm 2>/dev/null || \
            systemctl reload php-fpm 2>/dev/null || \
            echo "‚ö†Ô∏è No se pudo recargar PHP-FPM"
            
            echo "‚úÖ Deploy completado exitosamente!"