name: Deploy Laravel + React/Vite (Debug Path)
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy por SSH - Debug Path
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -e
            
            # Debug: Ver qué está pasando con las variables
            echo "🔍 DEBUG: Variables de entorno..."
            echo "PROJECT_PATH secret: '${{ secrets.PROJECT_PATH }}'"
            echo "PWD actual: '$(pwd)'"
            echo "HOME: '$HOME'"
            echo "USER: '$(whoami)'"
            
            # Cargar variables de entorno
            source ~/.bashrc 2>/dev/null || true
            source ~/.nvm/nvm.sh 2>/dev/null || true
            
            # Intentar con la variable primero
            PROJECT_DIR="${{ secrets.PROJECT_PATH }}"
            echo "🔍 DEBUG: PROJECT_DIR variable: '$PROJECT_DIR'"
            
            # Si la variable está vacía, usar hardcoded
            if [ -z "$PROJECT_DIR" ]; then
              echo "⚠️ PROJECT_PATH está vacío, usando ruta hardcoded..."
              PROJECT_DIR="/var/www/ViajesRoxanaWeb"
            fi
            
            echo "🔍 DEBUG: Intentando ir a: '$PROJECT_DIR'"
            
            # Verificar si el directorio existe
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "❌ El directorio '$PROJECT_DIR' no existe!"
              echo "📁 Directorios disponibles en /var/www:"
              ls -la /var/www/ 2>/dev/null || echo "No se puede listar /var/www"
              exit 1
            fi
            
            # Ir al directorio
            cd "$PROJECT_DIR"
            
            echo "🚀 Iniciando deploy..."
            echo "📍 Directorio actual: $(pwd)"
            echo "📁 Contenido:"
            ls -la | head -5
            
            # Verificar Git
            if [ -d .git ]; then
              echo "✅ Repositorio Git encontrado"
              echo "🔄 Haciendo git pull..."
              git pull origin main
            else
              echo "❌ No es un repositorio Git!"
              exit 1
            fi
            
            echo "✅ Path y Git funcionan correctamente!"