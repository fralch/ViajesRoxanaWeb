name: Deploy (pull) Laravel + React/Vite
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy por SSH (pull en servidor)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -e
            cd "/var/www/ViajesRoxanaWeb"

            echo "üöÄ Iniciando deploy..."
            echo "üìç Directorio actual: $(pwd)"
            
            # Funci√≥n para manejar errores no cr√≠ticos
            safe_run() {
              if "$@"; then
                echo "‚úÖ $1 exitoso"
                return 0
              else
                echo "‚ö†Ô∏è $1 fall√≥ (continuando...)"
                return 1
              fi
            }

            echo "üîç Verificando herramientas..."
            node --version || echo "‚ùå Node.js no encontrado"
            npm --version || echo "‚ùå npm no encontrado"
            composer --version || echo "‚ùå Composer no encontrado"

            # Evitar interferencias con Git
            unset GIT_DIR GIT_WORK_TREE

            # Asegurar repo
            git rev-parse --is-inside-work-tree

            # Stash si hay cambios locales
            STASHED=0
            if [ -n "$(git status --porcelain 2>/dev/null)" ]; then
              echo "‚ö†Ô∏è Cambios sin commitear, haciendo stash..."
              git stash push --include-untracked || true
              STASHED=1
            fi

            # Pull limpio
            echo "üîÑ Haciendo git pull..."
            git fetch origin main
            git checkout main
            git pull --ff-only origin main
            echo "‚úÖ Pull OK"

            # Calcular archivos cambiados
            set +e
            CHANGED=$(git diff --name-only HEAD@{1} HEAD 2>/dev/null)
            if [ $? -ne 0 ]; then
              CHANGED="__ALL__"
            fi
            set -e
            
            echo "üóÇÔ∏è Cambios detectados:"
            printf '%s\n' "$CHANGED" | sed 's/^/  - /'

            # Restaurar stash si es necesario
            CHANGED_LOCAL=""
            if [ "$STASHED" = "1" ]; then
              echo "‚Ü©Ô∏è Restaurando cambios del stash..."
              if git stash pop; then
                set +e
                CHANGED_LOCAL=$(git diff --name-only HEAD 2>/dev/null)
                set -e
              else
                echo "‚ùó Conflictos al aplicar el stash."
                exit 1
              fi
            fi

            # Composer install
            if printf '%s\n%s\n' "$CHANGED" "$CHANGED_LOCAL" | grep -E -q '(^|/)composer\.json|(^|/)composer\.lock|^__ALL__$'; then
              echo "üì¶ Composer install..."
              export COMPOSER_ALLOW_SUPERUSER=1
              composer install --no-dev --optimize-autoloader --no-interaction
            else
              echo "‚úÖ Composer sin cambios"
            fi

            # npm install/build
            if printf '%s\n%s\n' "$CHANGED" "$CHANGED_LOCAL" | grep -E -q '(^|/)package\.json|(^|/)package-lock\.json|^__ALL__$'; then
              echo "üì¶ npm deps..."
              if [ -f package-lock.json ]; then npm ci; else npm install; fi
            else
              echo "‚úÖ npm sin cambios"
            fi

            # Migraciones
            echo "üóÑÔ∏è Verificando migraciones..."
            set +e
            MIGRATE_STATUS=$(php artisan migrate:status --no-interaction 2>/dev/null)
            if echo "$MIGRATE_STATUS" | grep -q "No"; then
              echo "üóÑÔ∏è Ejecutando migraciones..."
              php artisan migrate --force --no-interaction
            else
              echo "‚úÖ No hay migraciones pendientes"
            fi
            set -e

            # Build Vite
            echo "üèóÔ∏è Construyendo assets con Vite..."
            npm run build

            # Limpiar cache
            echo "üßπ Limpiando cache..."
            safe_run php artisan config:clear
            safe_run php artisan route:clear  
            safe_run php artisan view:clear

            echo "‚ö° Optimizando..."
            safe_run php artisan config:cache
            safe_run php artisan route:cache
            safe_run php artisan view:cache
            safe_run php artisan storage:link

            # Permisos (con sudo si es necesario)
            echo "üîê Estableciendo permisos..."
            mkdir -p storage/framework/{cache,sessions,views} bootstrap/cache
            
            # Intentar con sudo primero, luego sin sudo
            if sudo -n chmod -R 775 storage bootstrap/cache 2>/dev/null; then
              echo "‚úÖ Permisos de archivos establecidos"
            else
              safe_run chmod -R 775 storage bootstrap/cache
            fi
            
            if sudo -n chown -R www-data:www-data storage bootstrap/cache 2>/dev/null; then
              echo "‚úÖ Propietario establecido"
            else
              echo "‚ö†Ô∏è No se pudo cambiar propietario (requiere sudo)"
            fi

            # Recargar PHP-FPM (con sudo si es necesario)
            echo "üîÅ Recargando PHP-FPM..."
            if sudo -n systemctl reload php8.3-fpm 2>/dev/null; then
              echo "‚úÖ PHP 8.3-FPM recargado"
            elif sudo -n systemctl reload php8.2-fpm 2>/dev/null; then
              echo "‚úÖ PHP 8.2-FPM recargado"  
            elif sudo -n systemctl reload php-fpm 2>/dev/null; then
              echo "‚úÖ PHP-FPM recargado"
            else
              echo "‚ö†Ô∏è No se pudo recargar PHP-FPM (requiere sudo)"
            fi

            echo "‚úÖ Deploy completado exitosamente!"
