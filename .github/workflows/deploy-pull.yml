name: Deploy Laravel + React/Vite (Safe)
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy por SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -e  # Detener si hay errores
            
            # Cargar variables de entorno
            source ~/.bashrc 2>/dev/null || true
            source ~/.nvm/nvm.sh 2>/dev/null || true
            
            # Ir al directorio del proyecto
            cd ${{ secrets.PROJECT_PATH }}
            
            echo "üöÄ Iniciando deploy..."
            echo "üìç Directorio actual: $(pwd)"
            
            # Verificar herramientas
            echo "üîç Verificando herramientas..."
            node --version || echo "‚ùå Node.js no encontrado"
            npm --version || echo "‚ùå npm no encontrado" 
            composer --version || echo "‚ùå Composer no encontrado"
            
            # EVITAR git status completamente - hacer stash preventivo
            echo "üîÑ Haciendo stash preventivo (por si acaso)..."
            git stash push --include-untracked -m "Auto-stash before deploy $(date)" 2>/dev/null || echo "‚úÖ No hab√≠a cambios para stash"
            
            # Git pull directo
            echo "üîÑ Actualizando c√≥digo..."
            git fetch origin main
            git checkout main 2>/dev/null || echo "Ya estamos en main"
            git pull origin main
            
            # Siempre ejecutar composer y npm (m√°s seguro)
            echo "üì¶ Actualizando dependencias de Composer..."
            export COMPOSER_ALLOW_SUPERUSER=1
            composer install --no-dev --optimize-autoloader --no-interaction
            
            echo "üì¶ Actualizando dependencias de npm..."
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            
            # Migraciones - m√©todo m√°s simple
            echo "üóÑÔ∏è Ejecutando migraciones..."
            php artisan migrate --force --no-interaction 2>/dev/null || echo "‚úÖ No hay migraciones o ya est√°n ejecutadas"
            
            # Build assets
            echo "üèóÔ∏è Construyendo assets..."
            npm run build
            
            # Limpieza y optimizaci√≥n (sin fallar si hay errores)
            echo "üßπ Limpiando y optimizando..."
            php artisan config:clear 2>/dev/null || true
            php artisan route:clear 2>/dev/null || true
            php artisan view:clear 2>/dev/null || true
            php artisan config:cache 2>/dev/null || true
            php artisan route:cache 2>/dev/null || true
            php artisan view:cache 2>/dev/null || true
            php artisan storage:link 2>/dev/null || true
            
            # Permisos
            echo "üîê Estableciendo permisos..."
            mkdir -p storage/framework/{cache,sessions,views} bootstrap/cache 2>/dev/null || true
            chmod -R 775 storage bootstrap/cache 2>/dev/null || true
            
            # Opcional: Recargar PHP-FPM
            echo "üîÅ Recargando PHP-FPM..."
            sudo systemctl reload php8.3-fpm 2>/dev/null || \
            sudo systemctl reload php8.2-fpm 2>/dev/null || \
            sudo systemctl reload php-fpm 2>/dev/null || \
            echo "‚ö†Ô∏è No se pudo recargar PHP-FPM"
            
            echo "‚úÖ Deploy completado exitosamente!"